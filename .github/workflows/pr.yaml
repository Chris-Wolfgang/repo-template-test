name: PR Checks

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution (Release)
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests and Collect Coverage for Each Test Project (Release)
        run: |
          find ./tests -type f -name '*Test*.csproj' | while read proj; do
            echo "Testing $proj"
            dotnet test "$proj" --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory "./TestResults"
          done

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate Coverage Reports (HTML, TextSummary, GitHub Markdown)
        run: |
          reportgenerator -reports:"TestResults/**/coverage.cobertura.xml" -targetdir:"CoverageReport" -reporttypes:"Html;TextSummary;MarkdownSummaryGithub"

      - name: Check Coverage Thresholds
        run: |
          if [ ! -f CoverageReport/SummaryGithub.md ]; then
            echo "CoverageReport/SummaryGithub.md not found! Coverage report was not generated."
            exit 1
          fi

          # Robustly parse the markdown table for per-project line coverage
          failed_projects=""
          awk -F'|' '
            /^\|/ && $3 ~ /%/ {
              gsub(/^[ \t]+|[ \t]+$/, "", $2);
              gsub(/^[ \t]+|[ \t]+$/, "", $3);
              project=$2;
              coverage=$3;
              sub(/%/, "", coverage);
              if (coverage+0 < 80) failed_projects=failed_projects " " project " (" coverage "%)"
            }
            END {
              if (failed_projects != "") {
                print "The following projects are below 80% line coverage:" failed_projects;
                exit 1
              }
            }
          ' CoverageReport/SummaryGithub.md

      - name: Upload coverage results and reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results-and-report
          path: |
            TestResults/
            CoverageReport/
