name: PR Checks

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --no-restore --configuration Release

      - name: Test Solution and Collect Coverage (XPlat Code Coverage)
        run: dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate Coverage Reports (HTML, TextSummary, GitHub Markdown)
        run: |
          reportgenerator -reports:"TestResults/**/coverage.cobertura.xml" -targetdir:"CoverageReport" -reporttypes:Html;TextSummary;MarkdownSummaryGithub

      - name: Check Coverage Thresholds
        run: |
          if (-not (Test-Path "CoverageReport/Summary.txt")) {
            Write-Error "CoverageReport/Summary.txt not found! Coverage report was not generated."
            exit 1
          }

          $summary = Get-Content "CoverageReport/Summary.txt"

          $projectLines = $summary | Where-Object { $_ -match '^\s*\|' }
          $failedProjects = @()

          foreach ($line in $projectLines) {
            # Example line: | MyProject | 90.0% | ... |
            if ($line -match '^\s*\|\s*([^\|]+)\s*\|\s*([\d\.]+)%') {
              $projectName = $matches[1].Trim()
              $lineCoverage = [double]$matches[2]
              if ($lineCoverage -lt 80.0) {
                $failedProjects += "$projectName ($lineCoverage%)"
              }
            }
          }

          if ($failedProjects.Count -gt 0) {
            Write-Error "The following projects are below 80% line coverage: $($failedProjects -join ', ')"
            exit 1
          }

      - name: Upload coverage results and reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results-and-report
          path: |
            TestResults/
            CoverageReport/
